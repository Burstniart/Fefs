man traceroute
shows the hops a call to a domain go through to get there

vim commands
modes:
insert mode : "i"
command mode : ESC (key)
last line : ":"

how to quit
ESC :q!
this means quit, get me out!


show line numbers: ':set number'
hide line numbers: 'set nonumber'

join lines down?: shft + j
append at EOl: 'A'

ssh-keygen: generates a key

note: config ssh file appears to be under /etc/ssh route

connect to server with ssh key: ' ssh -i ~/.ssh/fsfe root@YOUR_IP ' 

connect to server: ' ssh  root@YOUR_IP ' apparently if you put your the key in the righ place this just connects automatically

run server when starting, I guess
connect through ssh to your server, check digital ocean for the ip address
use byobu for multiple screens at once
keep on learning vim ;)

Write down a readme with all the steps so you dont forget pls

***
usermod -aG sudo user 
this add the user to the super users group
 
su: switch user, pretty straight forward

to disable root login:
sudo vi /etc/ssh/sshd:config

Here you can store an html file to show as nginx loads the domain your server is associated:
/var/www/html

change owenership of a directory to the current user
sudo chown -R $USER:$USER /var/www
note: $USER will callback with the current user, it's the same as typing the users name

create a json file: npm init
helps manage package name, license, etc

install express: npm i express --save
note: --save sets the dependencie to be written in the json iim guessing so when you pull this project from somewhere all your dependencies are installed as well

use directives: proxy_pass 
this will proxy whats on the root domain to the actual node server on a different port
edit /etc/nginx/sites-available/default

Inside the location / {} directive: the edit will point to the port 3000 so it'll look like so:
proxy_pass http://127.0.0:300/;

process manager: install PM2 
sudo npm i -g pm2
note: '-g' is a global installation, in this case we want it so it can handle multiple apps inside the server but it isn't typically adviced to do so

start pm2: pm2 start app.js

set auto restart: pm2 startup
Note: this creates a daemon which will always start the application when we start the server

copy the code snippet provided to setup the  startup script 

pm2 status: returns the status of the process

